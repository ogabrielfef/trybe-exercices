//PARTE 1

// function testingScope(escopo) {
//     if (escopo === true) {
//       var ifScope = 'NÃ£o devo ser utilizada fora do meu escopo (if)';
//       ifScope = ifScope + ' Ã³timo, fui utilizada no escopo !';
//       console.log(ifScope);
//     } else {
//       var elseScope = 'NÃ£o devo ser utilizada fora meu escopo (else)';
//       console.log(elseScope);
//     }
//     console.log(ifScope + ' o que estou fazendo aqui ? :O'); // Se necessÃ¡rio esta linha pode ser removida.
//   }

//   testingScope(true);

const testingScope = escopo => {
    if (escopo === true) {
        let ifScope = 'NÃ£o devo ser utilizada fora do meu escopo (if)';
        ifScope = `${ifScope} Ã³timo, fui utilizada no escopo !`;
        console.log(ifScope);
    } else {
        const elseScope = 'NÃ£o devo ser utilizada fora do meu escopo!'
        console.log(elseScope);
    }
}

testingScope(true);

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];

// // Seu cÃ³digo aqui.

// console.log(oddsAndEvens); // serÃ¡ necessÃ¡rio alterar essa linha ðŸ˜‰

const oddsAndEvens = [13, 3, 4, 10, 7, 2];

const sortOddsAndEvens = () => {
  oddsAndEvens[0] = 2;
  oddsAndEvens[1] = 3;
  oddsAndEvens[2] = 4;
  oddsAndEvens[3] = 7;
  oddsAndEvens[4] = 10;
  oddsAndEvens[5] = 13;

  return oddsAndEvens;
}

const sortedArray = sortOddsAndEvens();
console.log(`Os nÃºmeros ${sortedArray} se encontram ordenados de forma crescente !`);


//PARTE 2

//Crie uma funÃ§Ã£o que receba um nÃºmero e retorne seu fatorial.

const fatorial = numero => {
    let result = 1;

    for (let index = 2; index <= numero; index += 1){
        result *= index;
    }
    return result;
}
console.log(fatorial(3));

//Crie uma funÃ§Ã£o que receba uma frase e retorne qual a maior palavra.

const longestWord = text => {
    let wordArray = text.split(' ');
    let maxLength = 0;
    let result = '';

    for (const word of wordArray) {
        if (word.length > maxLength) {
            maxLength = word.length;
            result = word;
        }
    }

    return result;
}

console.log(longestWord("Antonio foi no banheiro e nÃ£o sabemos o que aconteceu"));

//Crie uma pÃ¡gina que contenha:
// Um botÃ£o ao qual serÃ¡ associado um event listener ;
// Uma variÃ¡vel clickCount no arquivo JavaScript que acumule o nÃºmero de clicks no botÃ£o;
// Um campo no HTML que vÃ¡ atualizando a quantidade de clicks no botÃ£o conforme a variÃ¡vel clickCount Ã© atualizada.


// Crie um cÃ³digo JavaScript com a seguinte especificaÃ§Ã£o:
// NÃ£o se esqueÃ§a de usar template literals
// FunÃ§Ã£o 1 : Escreva uma funÃ§Ã£o que vai receber uma string como parÃ¢metro. Sua funÃ§Ã£o deverÃ¡ procurar pela letra x em uma string qualquer que vocÃª determinar e substituir pela string que vocÃª passou como parÃ¢metro. Sua funÃ§Ã£o deve retornar essa nova string .
// Exemplo:
// String determinada: "Tryber x aqui!"
// ParÃ¢metro: "Bebeto"
// Retorno: "Tryber Bebeto aqui!"
// Um array com escopo global, que Ã© o escopo do arquivo JS , nesse caso, contendo cinco strings com suas principais skills .
// FunÃ§Ã£o 2 : Escreva uma funÃ§Ã£o que vai receber a string retornada da FunÃ§Ã£o 1 como parÃ¢metro. Essa funÃ§Ã£o deve concatenar as skills do array global Ã  string que foi passada para a FunÃ§Ã£o 2 via parÃ¢metro. VocÃª deve ordenar os skills em ordem alfabÃ©tica. Sua funÃ§Ã£o deve retornar essa nova string .

const array = ["Android", "iOS", "Architecture", "Teach", "Run"];

function buildSkillsPhrase (paramOne) {
    const fun1 = paramInner => (
      `Tryber ${paramInner} aqui!

      Tudo bem?`
    );

    let result = `${fun1(paramOne)}

    Minhas cinco principais habilidades sÃ£o:`;

    array.forEach((skill, index) =>
    result = `${result} 
    - ${skill}`);
    result = `${result} 

    #goTrybe`;

    return result;
}

console.log(buildSkillsPhrase("Lucas"));